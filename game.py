import random

print('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∏—Å–ª–æ–≤—É—é —É–≥–∞–¥–∞–π–∫—É')

#–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏
def is_valid(text, k, l):
    return text.isdigit() and k <= int(text) <= l

#–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —á–∏—Å–µ–ª –∏ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ
def start_game():
    print('–í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞')
    m, n = int(input()), int(input())
    m = min(m, n)
    n = max(m, n)
    num = random.randint(m, n)
    return m, n, num
     

#–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É –∏–ª–∏ –Ω–µ—Ç
def continue_game():
    s = input()
    if s.lower() == 'y':
        game()
    else:
        print('–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Å—ã–≥—Ä–∞–ª–∏ –≤ —É–≥–∞–¥–∞–π–∫—É üòä')
        return False

#—É–≥–∞–¥—ã–≤–∞–µ–º —á–∏—Å–ª–æ
def game():
    count = 0

    #–≤–µ—Ä–Ω—É–ª–∏ —á–∏—Å–ª–∞
    m, n, num = start_game()
    print('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ')

    #–∑–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª
    while True:
        guess = input()

    #–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏
        if not is_valid(guess, m, n):                           
            print('–ê –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Å–µ-—Ç–∞–∫–∏ –≤–≤–µ–¥–µ–º —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç', m, '–¥–æ', n, '?')
            count += 1
            continue
        else:
            guess = int(guess)                 

        #–ø—Ä–æ–≤–µ—Ä—è–µ–º —É–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ   
        if guess > num:
            print('–í–∞—à–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑–æ–∫')
            count += 1
        elif guess < num:
            print('–í–∞—à–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑–æ–∫')
            count += 1
        else:
            print('–í—ã —É–≥–∞–¥–∞–ª–∏, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!')
            print('–ü–æ–ø—ã—Ç–æ–∫ –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç–æ :', count)

        #–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—ã–≥—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ
            print('–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? Y –∏–ª–∏ N')                  
            result = continue_game()
            if not result:
                break

game()